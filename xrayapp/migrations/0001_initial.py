# Generated by Django 5.2.3 on 2025-06-26 11:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('Administrator', 'Administrator'), ('Radiographer', 'Radiographer'), ('Technologist', 'Technologist'), ('Radiologist', 'Radiologist')], db_index=True, default='Radiographer', max_length=20)),
                ('preferred_theme', models.CharField(choices=[('auto', 'System Default'), ('light', 'Light'), ('dark', 'Dark')], default='auto', max_length=10)),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('lt', 'Lithuanian')], default='en', max_length=10)),
                ('dashboard_view', models.CharField(choices=[('grid', 'Grid View'), ('list', 'List View')], default='grid', max_length=10)),
                ('email_notifications', models.BooleanField(default=True)),
                ('processing_complete_notification', models.BooleanField(default=True)),
                ('two_factor_auth_enabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='XRayImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, db_index=True, max_length=100)),
                ('last_name', models.CharField(blank=True, db_index=True, max_length=100)),
                ('patient_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('gender', models.CharField(blank=True, db_index=True, max_length=10)),
                ('date_of_birth', models.DateField(blank=True, db_index=True, null=True)),
                ('date_of_xray', models.DateField(blank=True, db_index=True, null=True)),
                ('additional_info', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='xrays/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('processing_status', models.CharField(db_index=True, default='pending', max_length=20)),
                ('progress', models.IntegerField(default=0)),
                ('image_format', models.CharField(blank=True, max_length=10)),
                ('image_size', models.CharField(blank=True, max_length=20)),
                ('image_resolution', models.CharField(blank=True, max_length=20)),
                ('image_date_created', models.DateTimeField(blank=True, null=True)),
                ('has_gradcam', models.BooleanField(db_index=True, default=False)),
                ('gradcam_visualization', models.CharField(blank=True, max_length=255, null=True)),
                ('gradcam_heatmap', models.CharField(blank=True, max_length=255, null=True)),
                ('gradcam_overlay', models.CharField(blank=True, max_length=255, null=True)),
                ('gradcam_target_class', models.CharField(blank=True, max_length=50, null=True)),
                ('has_pli', models.BooleanField(db_index=True, default=False)),
                ('pli_visualization', models.CharField(blank=True, max_length=255, null=True)),
                ('pli_overlay_visualization', models.CharField(blank=True, max_length=255, null=True)),
                ('pli_saliency_map', models.CharField(blank=True, max_length=255, null=True)),
                ('pli_target_class', models.CharField(blank=True, max_length=50, null=True)),
                ('atelectasis', models.FloatField(blank=True, db_index=True, null=True)),
                ('cardiomegaly', models.FloatField(blank=True, db_index=True, null=True)),
                ('consolidation', models.FloatField(blank=True, db_index=True, null=True)),
                ('edema', models.FloatField(blank=True, db_index=True, null=True)),
                ('effusion', models.FloatField(blank=True, db_index=True, null=True)),
                ('emphysema', models.FloatField(blank=True, db_index=True, null=True)),
                ('fibrosis', models.FloatField(blank=True, db_index=True, null=True)),
                ('hernia', models.FloatField(blank=True, db_index=True, null=True)),
                ('infiltration', models.FloatField(blank=True, db_index=True, null=True)),
                ('mass', models.FloatField(blank=True, db_index=True, null=True)),
                ('nodule', models.FloatField(blank=True, db_index=True, null=True)),
                ('pleural_thickening', models.FloatField(blank=True, db_index=True, null=True)),
                ('pneumonia', models.FloatField(blank=True, db_index=True, null=True)),
                ('pneumothorax', models.FloatField(blank=True, db_index=True, null=True)),
                ('fracture', models.FloatField(blank=True, db_index=True, null=True)),
                ('lung_opacity', models.FloatField(blank=True, db_index=True, null=True)),
                ('enlarged_cardiomediastinum', models.FloatField(blank=True, db_index=True, null=True)),
                ('lung_lesion', models.FloatField(blank=True, db_index=True, null=True)),
                ('support_devices', models.FloatField(blank=True, db_index=True, null=True)),
                ('severity_level', models.IntegerField(blank=True, db_index=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xray_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='PredictionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('model_used', models.CharField(db_index=True, max_length=50)),
                ('filter_by_gender', models.CharField(blank=True, db_index=True, max_length=10)),
                ('filter_by_age_min', models.IntegerField(blank=True, null=True)),
                ('filter_by_age_max', models.IntegerField(blank=True, null=True)),
                ('filter_by_date_min', models.DateField(blank=True, db_index=True, null=True)),
                ('filter_by_date_max', models.DateField(blank=True, db_index=True, null=True)),
                ('filter_by_pathology', models.CharField(blank=True, db_index=True, max_length=50)),
                ('filter_by_pathology_threshold', models.FloatField(blank=True, null=True)),
                ('atelectasis', models.FloatField(blank=True, null=True)),
                ('cardiomegaly', models.FloatField(blank=True, null=True)),
                ('consolidation', models.FloatField(blank=True, null=True)),
                ('edema', models.FloatField(blank=True, null=True)),
                ('effusion', models.FloatField(blank=True, null=True)),
                ('emphysema', models.FloatField(blank=True, null=True)),
                ('fibrosis', models.FloatField(blank=True, null=True)),
                ('hernia', models.FloatField(blank=True, null=True)),
                ('infiltration', models.FloatField(blank=True, null=True)),
                ('mass', models.FloatField(blank=True, null=True)),
                ('nodule', models.FloatField(blank=True, null=True)),
                ('pleural_thickening', models.FloatField(blank=True, null=True)),
                ('pneumonia', models.FloatField(blank=True, null=True)),
                ('pneumothorax', models.FloatField(blank=True, null=True)),
                ('fracture', models.FloatField(blank=True, null=True)),
                ('lung_opacity', models.FloatField(blank=True, null=True)),
                ('enlarged_cardiomediastinum', models.FloatField(blank=True, null=True)),
                ('lung_lesion', models.FloatField(blank=True, null=True)),
                ('support_devices', models.FloatField(blank=True, null=True)),
                ('severity_level', models.IntegerField(blank=True, db_index=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prediction_history', to=settings.AUTH_USER_MODEL)),
                ('xray', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prediction_history', to='xrayapp.xrayimage')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='xrayimage',
            index=models.Index(fields=['user', 'uploaded_at'], name='xrayapp_xra_user_id_25ca4c_idx'),
        ),
        migrations.AddIndex(
            model_name='xrayimage',
            index=models.Index(fields=['processing_status', 'uploaded_at'], name='xrayapp_xra_process_6fe6b8_idx'),
        ),
        migrations.AddIndex(
            model_name='xrayimage',
            index=models.Index(fields=['patient_id', 'date_of_xray'], name='xrayapp_xra_patient_5616d1_idx'),
        ),
        migrations.AddIndex(
            model_name='xrayimage',
            index=models.Index(fields=['gender', 'date_of_birth'], name='xrayapp_xra_gender_187df1_idx'),
        ),
        migrations.AddIndex(
            model_name='xrayimage',
            index=models.Index(fields=['severity_level', 'uploaded_at'], name='xrayapp_xra_severit_ef0c67_idx'),
        ),
        migrations.AddIndex(
            model_name='predictionhistory',
            index=models.Index(fields=['user', 'created_at'], name='xrayapp_pre_user_id_2227df_idx'),
        ),
        migrations.AddIndex(
            model_name='predictionhistory',
            index=models.Index(fields=['model_used', 'created_at'], name='xrayapp_pre_model_u_c85311_idx'),
        ),
        migrations.AddIndex(
            model_name='predictionhistory',
            index=models.Index(fields=['filter_by_gender', 'created_at'], name='xrayapp_pre_filter__0b8110_idx'),
        ),
        migrations.AddIndex(
            model_name='predictionhistory',
            index=models.Index(fields=['filter_by_pathology', 'created_at'], name='xrayapp_pre_filter__417d69_idx'),
        ),
        migrations.AddIndex(
            model_name='predictionhistory',
            index=models.Index(fields=['severity_level', 'created_at'], name='xrayapp_pre_severit_460e7c_idx'),
        ),
    ]
